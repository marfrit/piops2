.program readps2
.wrap_target
    wait 1 irq 0
    set x, 10
readbit:
    wait 0     GPIO 17 [4]
    in   pins, 1
    wait 1     GPIO 17
    jmp x--, readbit
    irq 1
.wrap
; 7

.program setpins
; The PS/2 keyboard protocol is an open collector protocol, so 
; setting pins to output is a low state, setting pins to input
; is a high state
.wrap_target
    wait 1 irq 2
    out pindirs, 2
.wrap
; 9

.program writeps2 
; write bits in a loop to not get into race conditions with reads
.wrap_target
    wait 1 irq 3
    set x, 8
    set pindirs, 1 ; start bit 
outbit:
    wait 0  GPIO 17 [14]
    out pindirs, 1 
    wait 1  GPIO 17
    jmp x-- outbit
    wait 0  GPIO 17
    set pindirs, 0 ; stop bit
    wait 0 gpio 16 ; wait for device ack
    wait 1 gpio 16 ; wait for device ack
    wait 1 GPIO 17
    irq 1
.wrap
; 22

% c-sdk {
static inline void readps2_program_init(PIO pio, uint sm, uint offset, uint pin) {
    pio_sm_config c = readps2_program_get_default_config(offset);
    sm_config_set_in_pins(&c, pin);
    sm_config_set_in_shift(&c, true, true, 11);
    sm_config_set_clkdiv(&c, 125); // one cycle is 1 microsecond
    pio_sm_init(pio, sm, offset, &c);
    pio_sm_set_enabled(pio, sm, true);
}

static inline void setpins_program_init(PIO pio, uint sm, uint offset, uint pin) {
    pio_sm_config c = setpins_program_get_default_config(offset);
    sm_config_set_set_pins(&c, pin, 2);
    sm_config_set_sideset_pins(&c, pin);
    sm_config_set_out_shift(&c, true, true, 2);
    pio_sm_init(pio, sm, offset, &c);
    pio_sm_set_enabled(pio, sm, true);
}

static inline void writeps2_program_init(PIO pio, uint sm, uint offset, uint pin) {
    pio_sm_config c = writeps2_program_get_default_config(offset);
    pio_gpio_init(pio, pin);
    pio_gpio_init(pio, pin + 1);
    sm_config_set_out_pins(&c, pin, 1);
    sm_config_set_in_pins(&c, pin);
    sm_config_set_set_pins(&c, pin, 1);
    sm_config_set_out_shift(&c, true, true, 9);
    sm_config_set_clkdiv(&c, 125); // one cycle is 1 microsecond
    pio_sm_init(pio, sm, offset, &c);
    pio_sm_set_enabled(pio, sm, true);
}


%}
